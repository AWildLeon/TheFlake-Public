#!/usr/bin/env direnv
export NIX_CONFIG=$'warn-dirty = false'
export EDITOR="code -w"

use flake

# Auto-start treefmt watcher in background
TREEFMT_WATCHER_PID_FILE="$PWD/.direnv/treefmt-watcher.pid"

# Function to start treefmt watcher
start_treefmt_watcher() {
  if [ -f "$TREEFMT_WATCHER_PID_FILE" ]; then
    local old_pid=$(cat "$TREEFMT_WATCHER_PID_FILE")
    if kill -0 "$old_pid" 2>/dev/null; then
      echo "üé® Treefmt watcher already running (PID: $old_pid)"
      return 0
    else
      rm -f "$TREEFMT_WATCHER_PID_FILE"
    fi
  fi

  echo "üöÄ Starting treefmt file watcher..."
  nohup "$PWD/scripts/treefmt-watcher.sh" watch >"$PWD/.direnv/treefmt-watcher.log" 2>&1 &
  local watcher_pid=$!
  echo "$watcher_pid" >"$TREEFMT_WATCHER_PID_FILE"
  echo "‚úÖ Treefmt watcher started (PID: $watcher_pid)"
  echo "üìù Log file: .direnv/treefmt-watcher.log"
}

# Function to stop treefmt watcher
stop_treefmt_watcher() {
  if [ -f "$TREEFMT_WATCHER_PID_FILE" ]; then
    local watcher_pid=$(cat "$TREEFMT_WATCHER_PID_FILE")
    if kill -0 "$watcher_pid" 2>/dev/null; then
      kill "$watcher_pid" 2>/dev/null
      echo "üõë Stopped treefmt watcher (PID: $watcher_pid)"
    fi
    rm -f "$TREEFMT_WATCHER_PID_FILE"
  fi
}

# Start the watcher when entering the directory (with delay to ensure Nix env is loaded)
start_watcher_delayed() {
  sleep 2 # Give time for Nix environment to fully load
  if command -v inotifywait >/dev/null 2>&1 && command -v treefmt >/dev/null 2>&1; then
    start_treefmt_watcher
  else
    echo "‚ö†Ô∏è  Treefmt watcher not started - missing dependencies"
    echo "    Try running: ./scripts/watcher-control.sh start"
  fi
}

# Start watcher in background after environment loads
(start_watcher_delayed) &

# Export function to stop watcher manually if needed
export -f stop_treefmt_watcher
